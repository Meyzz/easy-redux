'use strict';exports.__esModule = true;var _assign = require('babel-runtime/core-js/object/assign');var _assign2 = _interopRequireDefault(_assign);var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);var _entries = require('babel-runtime/core-js/object/entries');var _entries2 = _interopRequireDefault(_entries);var _promise2 = require('babel-runtime/core-js/promise');var _promise3 = _interopRequireDefault(_promise2);var _extends2 = require('babel-runtime/helpers/extends');var _extends3 = _interopRequireDefault(_extends2);exports.































































applyRequestReducers = applyRequestReducers;exports.
















createRequestReducer = createRequestReducer;exports.



requestReducer = requestReducer;var _easyRedux = require('./easy-redux');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var appStore = null;var cache = {};function createReducer(_ref) {var storeKey = _ref.storeKey;var reducerName = _ref.reducerName;var _ref$initialState = _ref.initialState;var initialState = _ref$initialState === undefined ? {} : _ref$initialState;var handlers = _ref.handlers;var WAITING_STATE = storeKey + '@' + reducerName + '.waiting';var SUCCESS_STATE = storeKey + '@' + reducerName + '.success';var FAIL_STATE = storeKey + '@' + reducerName + '.fail';var onWaiting = handlers.onWaiting;var onFail = handlers.onFail;var onSuccess = handlers.onSuccess;return { reducer: function reducer() {var state = arguments.length <= 0 || arguments[0] === undefined ? (0, _extends3.default)({ isFailed: false, isWaiting: false }, initialState) : arguments[0];var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];switch (action.type) {case WAITING_STATE:{if (typeof onWaiting === 'function') {return (0, _extends3.default)({}, onWaiting(state, action), { isWaiting: true, isFailed: false });} else {return (0, _extends3.default)({}, state, { isWaiting: true, isFailed: false });}}case SUCCESS_STATE:{if (typeof onSuccess === 'function') {return (0, _extends3.default)({ isWaiting: false, isFailed: false }, onSuccess(state, action));} else {return (0, _extends3.default)({}, state, { isWaiting: false, isFailed: false, data: action.result });}}case FAIL_STATE:{if (typeof onFail === 'function') {return (0, _extends3.default)({ isWaiting: false, isFailed: true }, onFail(state, action));} else {return (0, _extends3.default)({}, state, { isWaiting: false, isFailed: true, error: action.error });}}default:return state;}}, submit: function submit() {var _promise = handlers.promise;_promise = _promise || _promise3.default.resolve();var args = arguments;return { types: [WAITING_STATE, SUCCESS_STATE, FAIL_STATE], promise: function promise(request) {return _promise(request).apply(undefined, args);} };} };} /**
apply
param {String} storeKey
param {Object} data
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @param {Object} [data.initialState] - optional parameter to  set up initial state
param {Function} data.promise - a promise that performs a request
param {Function} [data.onSuccess] - callback on success fulfilled request. Must return new state
param {Function} [data.onError] - callback on request fails. Must return new state
param {Boolean} replace - replace existing reducer in cache
function applyRequestReducers(storeKey, data) {var replace = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];var reducers = [];var commonInitialState = { data: {}, error: null };(0, _entries2.default)(data).forEach(function (_ref2) {var reducerName = _ref2[0];var options = _ref2[1];var initialState = options.initialState;var handlers = (0, _objectWithoutProperties3.default)(options, ['initialState']);initialState = (0, _assign2.default)({}, commonInitialState, initialState);var cacheKey = storeKey + '.' + reducerName;cache[cacheKey] = (0, _extends3.default)({}, createReducer({ storeKey: storeKey, reducerName: reducerName, initialState: initialState, handlers: handlers }));reducers.push(cache[cacheKey].reducer);});return (0, _easyRedux.applyReducer)(storeKey, _easyRedux.localCompose.apply(undefined, reducers), replace);}function createRequestReducer(store) {appStore = store;}function requestReducer(key) {return { submit: function submit() {var _cache$key;if (!cache[key]) {throw new Error('There is no request reducer with key ' + key + ' found');}return appStore.dispatch((_cache$key = cache[key]).submit.apply(_cache$key, arguments));} };}